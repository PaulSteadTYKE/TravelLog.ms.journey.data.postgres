/*
 * This file is generated by jOOQ.
 */
package uk.co.tyke.travellog.journey.data.postgres.jooq;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import uk.co.tyke.travellog.journey.data.postgres.jooq.tables.Journey;
import uk.co.tyke.travellog.journey.data.postgres.jooq.tables.Trip;
import uk.co.tyke.travellog.journey.data.postgres.jooq.tables.TripPoint;
import uk.co.tyke.travellog.journey.data.postgres.jooq.tables.records.JourneyRecord;
import uk.co.tyke.travellog.journey.data.postgres.jooq.tables.records.TripPointRecord;
import uk.co.tyke.travellog.journey.data.postgres.jooq.tables.records.TripRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * travellog_journey_dev_schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<JourneyRecord> JOURNEY_PKEY = Internal.createUniqueKey(Journey.JOURNEY, DSL.name("journey_pkey"), new TableField[] { Journey.JOURNEY.JOURNEY_ID }, true);
    public static final UniqueKey<TripRecord> TRIP_PKEY = Internal.createUniqueKey(Trip.TRIP, DSL.name("trip_pkey"), new TableField[] { Trip.TRIP.TRIP_ID }, true);
    public static final UniqueKey<TripPointRecord> TRIP_POINT_PKEY = Internal.createUniqueKey(TripPoint.TRIP_POINT, DSL.name("trip_point_pkey"), new TableField[] { TripPoint.TRIP_POINT.TRIP_POINT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<TripRecord, JourneyRecord> TRIP__TRIP_JOURNEY_ID_FKEY = Internal.createForeignKey(Trip.TRIP, DSL.name("trip_journey_id_fkey"), new TableField[] { Trip.TRIP.JOURNEY_ID }, Keys.JOURNEY_PKEY, new TableField[] { Journey.JOURNEY.JOURNEY_ID }, true);
    public static final ForeignKey<TripPointRecord, TripRecord> TRIP_POINT__TRIP_POINT_TRIP_ID_FKEY = Internal.createForeignKey(TripPoint.TRIP_POINT, DSL.name("trip_point_trip_id_fkey"), new TableField[] { TripPoint.TRIP_POINT.TRIP_ID }, Keys.TRIP_PKEY, new TableField[] { Trip.TRIP.TRIP_ID }, true);
}
